// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.4
// source: shared/auth_info.proto

package api_types

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TokenInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                   // User id
	InstanceId       string            `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`                                                                 // To which instance/country/high level group/ does the user belongs to
	IssuedAt         int64             `protobuf:"varint,3,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`                                                                      // time of token generation in posix time
	Payload          map[string]string `protobuf:"bytes,4,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // optional infos, e.g., role(s)
	ProfilId         string            `protobuf:"bytes,5,opt,name=profil_id,json=profilId,proto3" json:"profil_id,omitempty"`                                                                       // which subprofile of the user is selected
	AccountConfirmed bool              `protobuf:"varint,6,opt,name=account_confirmed,json=accountConfirmed,proto3" json:"account_confirmed,omitempty"`                                              // e.g. if user verified email, phone address
	TempToken        *TempTokenInfo    `protobuf:"bytes,7,opt,name=temp_token,json=tempToken,proto3" json:"temp_token,omitempty"`                                                                    // in case user logged in with a temporary token
	OtherProfileIds  []string          `protobuf:"bytes,8,rep,name=other_profile_ids,json=otherProfileIds,proto3" json:"other_profile_ids,omitempty"`                                                // other profiles, not the selected
}

func (x *TokenInfos) Reset() {
	*x = TokenInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_auth_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfos) ProtoMessage() {}

func (x *TokenInfos) ProtoReflect() protoreflect.Message {
	mi := &file_shared_auth_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfos.ProtoReflect.Descriptor instead.
func (*TokenInfos) Descriptor() ([]byte, []int) {
	return file_shared_auth_info_proto_rawDescGZIP(), []int{0}
}

func (x *TokenInfos) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TokenInfos) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *TokenInfos) GetIssuedAt() int64 {
	if x != nil {
		return x.IssuedAt
	}
	return 0
}

func (x *TokenInfos) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TokenInfos) GetProfilId() string {
	if x != nil {
		return x.ProfilId
	}
	return ""
}

func (x *TokenInfos) GetAccountConfirmed() bool {
	if x != nil {
		return x.AccountConfirmed
	}
	return false
}

func (x *TokenInfos) GetTempToken() *TempTokenInfo {
	if x != nil {
		return x.TempToken
	}
	return nil
}

func (x *TokenInfos) GetOtherProfileIds() []string {
	if x != nil {
		return x.OtherProfileIds
	}
	return nil
}

type TempTokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Expiration int64             `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Purpose    string            `protobuf:"bytes,3,opt,name=purpose,proto3" json:"purpose,omitempty"`
	UserId     string            `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Info       map[string]string `protobuf:"bytes,5,rep,name=info,proto3" json:"info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // optional infos
	InstanceId string            `protobuf:"bytes,6,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *TempTokenInfo) Reset() {
	*x = TempTokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_auth_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempTokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempTokenInfo) ProtoMessage() {}

func (x *TempTokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shared_auth_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempTokenInfo.ProtoReflect.Descriptor instead.
func (*TempTokenInfo) Descriptor() ([]byte, []int) {
	return file_shared_auth_info_proto_rawDescGZIP(), []int{1}
}

func (x *TempTokenInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *TempTokenInfo) GetExpiration() int64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

func (x *TempTokenInfo) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *TempTokenInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TempTokenInfo) GetInfo() map[string]string {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *TempTokenInfo) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type TempTokenInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TempTokens []*TempTokenInfo `protobuf:"bytes,1,rep,name=temp_tokens,json=tempTokens,proto3" json:"temp_tokens,omitempty"`
}

func (x *TempTokenInfos) Reset() {
	*x = TempTokenInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_auth_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempTokenInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempTokenInfos) ProtoMessage() {}

func (x *TempTokenInfos) ProtoReflect() protoreflect.Message {
	mi := &file_shared_auth_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempTokenInfos.ProtoReflect.Descriptor instead.
func (*TempTokenInfos) Descriptor() ([]byte, []int) {
	return file_shared_auth_info_proto_rawDescGZIP(), []int{2}
}

func (x *TempTokenInfos) GetTempTokens() []*TempTokenInfo {
	if x != nil {
		return x.TempTokens
	}
	return nil
}

var File_shared_auth_info_proto protoreflect.FileDescriptor

var file_shared_auth_info_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65,
	0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x22, 0x97, 0x03,
	0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x6e,
	0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0a,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x94, 0x02, 0x0a, 0x0d, 0x54, 0x65, 0x6d, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x40, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x37, 0x0a, 0x09, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55,
	0x0a, 0x0e, 0x54, 0x65, 0x6d, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x43, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a,
	0x61, 0x6e, 0x65, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6c, 0x75, 0x65, 0x6e, 0x7a, 0x61, 0x6e, 0x65, 0x74,
	0x2f, 0x67, 0x6f, 0x2d, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_auth_info_proto_rawDescOnce sync.Once
	file_shared_auth_info_proto_rawDescData = file_shared_auth_info_proto_rawDesc
)

func file_shared_auth_info_proto_rawDescGZIP() []byte {
	file_shared_auth_info_proto_rawDescOnce.Do(func() {
		file_shared_auth_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_auth_info_proto_rawDescData)
	})
	return file_shared_auth_info_proto_rawDescData
}

var file_shared_auth_info_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_shared_auth_info_proto_goTypes = []interface{}{
	(*TokenInfos)(nil),     // 0: influenzanet.shared.TokenInfos
	(*TempTokenInfo)(nil),  // 1: influenzanet.shared.TempTokenInfo
	(*TempTokenInfos)(nil), // 2: influenzanet.shared.TempTokenInfos
	nil,                    // 3: influenzanet.shared.TokenInfos.PayloadEntry
	nil,                    // 4: influenzanet.shared.TempTokenInfo.InfoEntry
}
var file_shared_auth_info_proto_depIdxs = []int32{
	3, // 0: influenzanet.shared.TokenInfos.payload:type_name -> influenzanet.shared.TokenInfos.PayloadEntry
	1, // 1: influenzanet.shared.TokenInfos.temp_token:type_name -> influenzanet.shared.TempTokenInfo
	4, // 2: influenzanet.shared.TempTokenInfo.info:type_name -> influenzanet.shared.TempTokenInfo.InfoEntry
	1, // 3: influenzanet.shared.TempTokenInfos.temp_tokens:type_name -> influenzanet.shared.TempTokenInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_shared_auth_info_proto_init() }
func file_shared_auth_info_proto_init() {
	if File_shared_auth_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_auth_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_auth_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempTokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_auth_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempTokenInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_auth_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_auth_info_proto_goTypes,
		DependencyIndexes: file_shared_auth_info_proto_depIdxs,
		MessageInfos:      file_shared_auth_info_proto_msgTypes,
	}.Build()
	File_shared_auth_info_proto = out.File
	file_shared_auth_info_proto_rawDesc = nil
	file_shared_auth_info_proto_goTypes = nil
	file_shared_auth_info_proto_depIdxs = nil
}
